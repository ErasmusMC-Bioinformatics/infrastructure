---
# Galaxy
galaxy_create_user: true
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_manage_cleanup: true
galaxy_systemd_mode: 'gravity'
galaxy_layout: root-dir
galaxy_root: /srv/galaxy
galaxy_user: {name: galaxy, shell: /bin/bash}
galaxy_commit_id: release_23.2
galaxy_config_style: yaml
galaxy_force_checkout: true

# This should've been fixed in latest galaxy role??
galaxy_tool_dependency_dir: "{{ galaxy_mutable_data_dir }}/dependencies"
# miniconda
miniconda_prefix: "{{ galaxy_tool_dependency_dir }}/_conda"
miniconda_version: latest
miniconda_channels: ['conda-forge', 'defaults']

# Galaxy Job Configuration
galaxy_job_config:
  runners:
    local_runner:
      load: galaxy.jobs.runners.local:LocalJobRunner
      workers: 4
  handling:
    assign: ['db-skip-locked']
  execution:
    default: local_env
    environments:
      local_env:
        runner: local_runner
        tmp_dir: true
  tools:
    - class: local # these special tools that aren't parameterized for remote execution - expression tools, upload, etc
      environment: local_env

galaxy_config:
  galaxy:
    brand: "üß¨üî¨üá≥üá±üè•"
    logo_src: "https://www.erasmusmc.nl/-/media/erasmusmc/images/_platform/logos/full-colour-svg-main-brand-responsive-1-4.svg"
    themes_config_file: "{{ galaxy_config_dir }}/themes.yml"
    # Main Configuration
    admin_users:
    - admin@example.org
    - e.rasche@erasmusmc.nl
    - d.dollee@erasmusmc.nl
    #- zazkia@gmail.com
    #- d.vanzessen@erasmusmc.nl
    database_connection: "postgresql:///galaxy?host=/var/run/postgresql"
    file_path: /data/galaxy
    check_migrate_tools: false
    tool_data_path: "{{ galaxy_mutable_data_dir }}/tool-data"
    data_dir: "{{ galaxy_mutable_data_dir }}" # I think this is fixed in more recent role versions.
    job_config_file: "{{ galaxy_config_dir }}/job_conf.xml"
    id_secret: "{{ vault_id_secret }}"
    tool_data_table_config_path: /cvmfs/data.galaxyproject.org/byhand/location/tool_data_table_conf.xml,/cvmfs/data.galaxyproject.org/managed/location/tool_data_table_conf.xml
    object_store_store_by: uuid
    trs_servers_config_file: "{{ galaxy_config_dir }}/trs_servers_conf.yml"
    aws_estimate: true
    job_working_directory: /data/galaxy/jobs
    database_engine_option_server_side_cursors: true
    slow_query_log_threshold: 5
    enable_per_request_sql_debugging: true
    # File serving Performance
    nginx_x_accel_redirect_base: /_x_accel_redirect

    watch_job_rules: 'polling'
    allow_path_paste: true
    sanitize_all_html: false
    serve_xss_vulnerable_mimetypes: true
    library_import_dir: /data/library
    enable_quotas: true
    show_welcome_with_login: true
    expose_user_name: true
    #conda_exec: '{{ miniconda_prefix }}/bin/mamba'
    expose_dataset_path: true
    expose_potentially_sensitive_job_metrics: true
    # NFS workarounds
    retry_job_output_collection: 3
    # Debugging
    cleanup_job: always
    allow_user_deletion: true
    allow_user_impersonation: true
    user_preferences_extra_conf_path: "{{ galaxy_config_dir }}/user_preferences.yml"
    # Tool security
    outputs_to_working_directory: true
    new_user_dataset_access_role_default_private: true # Make datasets private by default
    # oidc
    enable_oidc: true
    oidc_config_file: "{{ galaxy_config_dir }}/oidc_config.xml"
    oidc_backends_config_file: "{{ galaxy_config_dir }}/oidc_backends_config.xml"
    file_sources_config_file: "{{ galaxy_config_dir }}/file_sources.yml"
    # FTP
    ftp_upload_dir: /data/uploads
    ftp_upload_site: "{{ inventory_hostname }}"
    # Error reporting
    error_report_file: "{{ galaxy_config_dir }}/error_report.yml"
    new_file_path: /data/galaxy/new/
  gravity:
    process_manager: systemd
    galaxy_root: "{{ galaxy_root }}/server"
    galaxy_user: "{{ galaxy_user_name }}"
    virtualenv: "{{ galaxy_venv_dir }}"
    gunicorn:
      # listening options
      bind: "unix:{{ galaxy_mutable_config_dir }}/gunicorn.sock"
      # performance options
      workers: 2
      # Other options that will be passed to gunicorn
      # This permits setting of 'secure' headers like REMOTE_USER (and friends)
      # https://docs.gunicorn.org/en/stable/settings.html#forwarded-allow-ips
      extra_args: '--forwarded-allow-ips="*"'
      # This lets Gunicorn start Galaxy completely before forking which is faster.
      # https://docs.gunicorn.org/en/stable/settings.html#preload-app
      preload: true
    celery:
      concurrency: 2
      loglevel: DEBUG
    handlers:
      handler:
        processes: 2
        pools:
          - job-handlers
          - workflow-schedulers

galaxy_config_templates:
  - src: templates/galaxy/config/job_conf.xml.j2
    dest: "{{ galaxy_config.galaxy.job_config_file }}"
  - src: templates/galaxy/config/user_preferences_extra_conf.yml
    dest: "{{ galaxy_config.galaxy.user_preferences_extra_conf_path }}"
  - src: templates/galaxy/config/oidc_backends_config.xml
    dest: "{{ galaxy_config.galaxy.oidc_backends_config_file }}"
  - src: templates/galaxy/config/oidc_config.xml
    dest: "{{ galaxy_config.galaxy.oidc_config_file }}"
  - src: "templates/galaxy/config/file_sources.yml"
    dest: "{{ galaxy_config.galaxy.file_sources_config_file }}"
  - src: "templates/galaxy/config/trs_servers_conf.yml"
    dest: "{{ galaxy_config.galaxy.trs_servers_config_file }}"
  - src: "templates/galaxy/config/custom_tools.xml"
    dest: "{{ galaxy_config_dir }}/emc-tool-conf.xml"
  - src: "templates/galaxy/config/error_report.yml"
    dest: "{{ galaxy_config.galaxy.error_report_file }}"

galaxy_config_files_public:
  - src: files/galaxy/welcome.html
    dest: "{{ galaxy_mutable_config_dir }}/welcome.html"

galaxy_config_files:
  - src: files/galaxy/themes.yml
    dest: "{{ galaxy_config.galaxy.themes_config_file }}"

# Tools
galaxy_tool_config_files:
- "{{ galaxy_server_dir }}/config/tool_conf.xml.sample"
- "{{ galaxy_config_dir }}/emc-tool-conf.xml"

# Certbot
openssl_domains:
- bioinf-galaxy.erasmusmc.nl
nginx_ssl_role: galaxyproject.self_signed_certs
nginx_conf_ssl_certificate_key: /etc/ssl/private/bioinf-galactus.erasmusmc.nl.key
nginx_conf_ssl_certificate: /etc/ssl/certs/bioinf-galactus.erasmusmc.nl.crt

certbot_share_key_users:
  - nginx
certbot_post_renewal: |
    systemctl restart nginx || true
certbot_domains:
 - "{{ inventory_hostname }}"
certbot_agree_tos: --agree-tos

# NGINX
nginx_selinux_allow_local_connections: true
nginx_servers:
  - redirect-ssl
nginx_ssl_servers:
  - galaxy
nginx_enable_default_server: false
nginx_conf_http:
  client_max_body_size: 1g
  # gzip: "on" # This is enabled by default in Ubuntu, and the duplicate directive will cause a crash.
  gzip_proxied: "any"
  gzip_static: "on"   # The ngx_http_gzip_static_module module allows sending precompressed files with the ".gz" filename extension instead of regular files.
  gzip_vary: "on"
  gzip_min_length: 128
  gzip_comp_level: 6  # Tradeoff of better compression for slightly more CPU time.
  gzip_types: |
      text/plain
      text/css
      text/xml
      text/javascript
      application/javascript
      application/x-javascript
      application/json
      application/xml
      application/xml+rss
      application/xhtml+xml
      application/x-font-ttf
      application/x-font-opentype
      image/png
      image/svg+xml
      image/x-icon

# HTCondor
condor_host: "bioinf-galactus"
condor_allow_write: "bioinf-galactus,bioinf-galaxian,*"
condor_roles:
    - execute
    - central-manager
    - submit
condor_allow_negotiator: '$(ALLOW_WRITE)'
condor_allow_administrator: "$(ALLOW_WRITE)"
condor_network_interface: "{{ ansible_default_ipv4.interface }}"
condor_fs_domain: emc-bioinf
condor_uid_domain: emc-bioinf
condor_trust_uid_domain: 'True'
condor_extra: |
    CLAIM_PARTITIONABLE_LEFTOVERS = True
    NUM_SLOTS = 1
    NUM_SLOTS_TYPE_1 = 1
    SLOT_TYPE_1 = cpus=90%,ram=90%
    SLOT_TYPE_1_PARTITIONABLE = True
    ALLOW_PSLOT_PREEMPTION = False
    STARTD.PROPORTIONAL_SWAP_ASSIGNMENT = True
    COLLECTOR_NAME = "EMC Cluster"
    CGROUP_MEMORY_LIMIT_POLICY = soft

# Proftpd:
proftpd_galaxy_auth: yes
galaxy_ftp_upload_dir: "{{ galaxy_config.galaxy.ftp_upload_dir }}"
proftpd_display_connect: |
  EMC FTP server

  Unauthorized access is prohibited
proftpd_create_ftp_upload_dir: yes
proftpd_options:
  - User: galaxy
  - Group: galaxy
  - Port: 21
proftpd_sql_db: galaxy@/var/run/postgresql
proftpd_sql_user: galaxy
proftpd_global_options:
  - PassivePorts: 56000 60000
